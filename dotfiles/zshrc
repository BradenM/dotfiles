# .zshrc
# ZSH Config
#
# See @ http://zsh.sourceforge.net/Intro/intro_3.html

ZSH_THEME="spaceship"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Oh-My-Zsh Plugins
plugins=(
  systemd
  zsh-nvm
  zsh-autosuggestions
  zsh-syntax-highlighting
  docker
  yarn
)

# Zsh Syntax Highlight

typeset -A ZSH_HIGHLIGHT_STYLES

if [ -n "$ZSH_REC_MODE" ]; then
	echo "ZSH LOADED IN REC MODE"
	noload=(zsh-autosuggestions)
	for p in ${noload[@]}; do
		plugins=( ${plugins[@]/$p} )
	done
	echo $plugins
	ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
	ZSH_HIGHLIGHT_STYLES[unknown-token]=none
	alias lstree="tree -a -L 2"
fi


#ZSH_HIGHLIGHT_STYLES[default]=none
#ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=green
#ZSH_HIGHLIGHT_STYLES[alias]=none
#ZSH_HIGHLIGHT_STYLES[builtin]=none
#ZSH_HIGHLIGHT_STYLES[function]=none
#ZSH_HIGHLIGHT_STYLES[command]=green
#ZSH_HIGHLIGHT_STYLES[precommand]=none
#ZSH_HIGHLIGHT_STYLES[commandseparator]=none
#ZSH_HIGHLIGHT_STYLES[hashed-command]=none
ZSH_HIGHLIGHT_STYLES[path]=cyan
#ZSH_HIGHLIGHT_STYLES[globbing]=none
#ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue
#ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=none
#ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=none
#ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
#ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=yellow
#ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=yellow
#ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=cyan
#ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=cyan
#ZSH_HIGHLIGHT_STYLES[assign]=none

# Spaceship Prompt
SPACESHIP_PROMPT_ORDER=(
  # time        # Time stamps section (Disabled)
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  # hg          # Mercurial section (hg_branch  + hg_status)
  # package     # Package version (Disabled)
  node          # Node.js section
  ruby          # Ruby section
  # elixir        # Elixir section
  # xcode       # Xcode section (Disabled)
  # swift       # Swift section
  # golang      # Go section
  # php         # PHP section
  # rust        # Rust section
  # haskell     # Haskell Stack section
  # julia       # Julia section (Disabled)
  docker     
  aws           # Amazon Web Services section
  venv          # virtualenv section
  # conda       # conda virtualenv section
  pyenv         # Pyenv section
  # dotnet      # .NET section
  # ember       # Ember.js section (Disabled)
  kubecontext   # Kubectl context section
  # terraform   # Terraform workspace section
  exec_time     # Execution time
  line_sep      # Line break
  # battery     # Battery level and status
  # vi_mode     # Vi-mode indicator (Disabled)
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)


# ZSH-NVM Config
export NVM_DIR="$HOME/.nvm"
export NVM_LAZY_LOAD=true # Get rid of a 3s startup time

# Load Oh-My-Zsh
source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# Preferred editor for local and remote sessions
# export EDITOR='vim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"


# Config Aliases
alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias src="source ~/.zshrc"

# Dotdrop
export DOTFILES="$HOME/dotfiles"
alias dotdrop="$DOTFILES/dotdrop.sh --cfg=$DOTFILES/config.yaml"
# Dotfile Paths
export DOTF_SCRIPTS="$HOME/.scripts"


# Spaceship Theme Options
SPACESHIP_CHAR_SYMBOL="‚ùØ "


# IP Aliases
alias myip="ip addr | grep -m 1 -o '192.*.*.*' | cut -d '/' -f 1"
alias wanip="curl -s -X GET https://checkip.amazonaws.com"


# Add Yarn Global Bin Path
export PATH="$HOME/.yarn/bin:$PATH"


# cls Alias (Prints ls with permission numerical values)
alias cls="ls -l | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\"%0o \",k);print}'"


# Lazy Load Rbenv
rbenv() {
	unset -f rbenv
	unalias ls
	alias ls="colorls --gs"
	export PATH="$HOME/.rbenv/bin:$PATH"
	eval "$(rbenv init -)"
	export PATH="$HOME/.rbenv/bin:$PATH"
	[ -z "$1" ] && rbenv "$@" && return
	"$1" "${@:2}"
}
alias ls="rbenv colorls --gs"

# Android Env
export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:~/.android/avd
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools
export ANDROID_NDK=$ANDROID_HOME/ndk-bundle

# Set CLI Color
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# Aliases
alias ll="ls -l"
alias la="ls -a"

# Local Binaries
export PATH="$HOME/.local/bin:$PATH"

# Go Env
export GOPATH="$HOME/go"
export PATH="$GOPATH/bin:$PATH"

# Jabba (Java Version Manager) Lazy Load
jabba() {
	unset -f jabba
	unalias java
	[ -s "/home/bradenmars/.jabba/jabba.sh" ] && source "/home/bradenmars/.jabba/jabba.sh"
	[ -z "$1" ] && jabba "$@" && return
	"$1" "${@:2}"
}
alias java="jabba java"

# Pyenv (Lazy Load)
export CFLAGS='-O2'
# pyenv() {
#	unset -f pyenv
#	unalias pip python pipenv
#	export PATH="/home/bradenmars/.pyenv/bin:$PATH"
#	eval "$(pyenv init -)"
#	eval "$(pyenv virtualenv-init -)"
#	[ -z "$1" ] && pyenv "$@" && return
#	"$1" "${@:2}"
#}
#alias pip="pyenv pip"
#alias python="pyenv python"
#alias pipenv="pyenv pipenv"

export PATH="/home/bradenmars/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
export PATH="$(pyenv root)/shims:$PATH"
source $(pyenv root)/completions/pyenv.zsh
pyenv rehash


if [ -n "$ZSH_REC_MODE" ]; then
	pip > /dev/null
	clear
fi

# Spotify (Arch w/ Snap)
alias spotify="nohup snap run spotify --force-device-scale-factor=2 > /dev/null 2> /dev/null < /dev/null &"


# Text Color
BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
LIME_YELLOW=$(tput setaf 190)
POWDER_BLUE=$(tput setaf 153)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
BRIGHT=$(tput bold)
NORMAL=$(tput sgr0)
BLINK=$(tput blink)
REVERSE=$(tput smso)
UNDERLINE=$(tput smul)

# Qt5 HiDPI Scaling
export QT_AUTO_SCREEN_SCALE_FACTOR=1

# ESP Xtensa
export PATH="$HOME/esp/xtensa-esp32-elf/bin:$PATH"

# Disk Analyzer
alias disk-analyze="sudo baobab"

# Safe RM
alias rm='trash'

# Load Dotfiles
source "$DOTF_SCRIPTS/load"

# .vimrc
export MYVIMRC="~/.vimrc"

# virtualenvwrapper 
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/projects
source $HOME/.local/bin/virtualenvwrapper_lazy.sh

# XDG Config
export XDG_CONFIG_HOME=$HOME/.config

# Kitty
#: Env
export KITTY_THEME="Monokai Soda"
#: Load
autoload -Uz compinit
compinit
#: Completion
kitty + complete setup zsh | source /dev/stdin

if [[ "$TERM" == "xterm-kitty" ]]; then
	alias ssh="kitty +kitten ssh"
	kittyrec() {
		kitty --title="Micropy Cli" -o initial_window_width=80c -o initial_window_height=25c
	}
fi

# Force Load XResources
xrdb ~/.Xresources

# Force DPI
xrandr --output XWAYLAND1 --dpi 90


# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /home/bradenmars/.config/yarn/global/node_modules/tabtab/.completions/serverless.zsh ]] && . /home/bradenmars/.config/yarn/global/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /home/bradenmars/.config/yarn/global/node_modules/tabtab/.completions/sls.zsh ]] && . /home/bradenmars/.config/yarn/global/node_modules/tabtab/.completions/sls.zsh
# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /home/bradenmars/.config/yarn/global/node_modules/tabtab/.completions/slss.zsh ]] && . /home/bradenmars/.config/yarn/global/node_modules/tabtab/.completions/slss.zsh
