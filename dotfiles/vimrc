" Install vim-plug if needed
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif


" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'junegunn/vim-easy-align'

" Vim Easymotion
Plug 'easymotion/vim-easymotion'

" Any valid git URL is allowed
Plug 'https://github.com/junegunn/vim-github-dashboard.git'

" Sudo Helper
Plug 'lambdalisue/suda.vim'

" Autocomplete + Snippets
"Plug 'roxma/nvim-completion-manager' | Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

" Editorconfig
Plug 'editorconfig/editorconfig-vim'

" Nerd Commenter
Plug 'scrooloose/nerdcommenter'

" Vim Shebang
Plug 'sbdchd/vim-shebang'

" Vim Prettier
Plug 'prettier/vim-prettier', { 'do': 'yarn install' }

" Auto Save
Plug '907th/vim-auto-save'

" Airline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Syntax Checking
Plug 'vim-syntastic/syntastic'

" Git Gutter
Plug 'airblade/vim-gitgutter'

" Indent Guides
Plug 'nathanaelkane/vim-indent-guides'

" Vim Multi Cursor
" Plug 'terryma/vim-multiple-cursors'

" Vim Denite
Plug 'Shougo/denite.nvim', { 'do': ':UpdateRemotePlugins' }

" Vim Taskwarrior
Plug 'blindFS/vim-taskwarrior'

" Initialize plugin system
call plug#end()

" Enable Smart Sudo
let g:suda_smart_edit = 1

" Set Python Exec
let g:python3_host_prog = '/home/bradenmars/.pyenv/versions/3.7.3/bin/python'

" Enable Mouse
set mouse=a

" Status bar
set laststatus=2

" Line Numbers
set number

" Relative Line Numbers
set relativenumber

" Encoding
set encoding=utf-8

" Enable filetype plugin
filetype plugin on

" Always use System Clipboard
set clipboard+=unnamedplus

" Highlight matching search patterns
set hlsearch
" Enable incremental search
set incsearch
" Include matching uppercase words with lowercase search term
set ignorecase
" Include only uppercase words with uppercase search term
set smartcase

" vim auto save config
let g:auto_save = 1 "enable autosave

" Automatically save and load folds
"autocmd BufWinLeave *.* mkview
"autocmd BufWinEnter *.* silent loadview"

" Syntastic Config
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

" Airline
let g:airline_powerline_fonts = 1
let g:airline_theme = 'minimalist'

" Prettier
let g:prettier#autoformat = 1
let g:prettier#autoformat_require_pragma = 0
let g:prettier#autoformat_config_present = 1

" Git Gutter Config
set updatetime=100

" Set Leader
"
let mapleader = " "

" See Leader
set showcmd

" Quick Delete Line
nmap <leader>d dd

" JK Remap
inoremap jk <esc>
inoremap <esc> <nop>

" No Highlight Map
map <C-n> :nohl<CR>

" Remap Ctrl+W to Caps Lock (Sway caps lock -> esc)
nmap <esc> <C-w>

" Color Scheme
colorscheme default
set background=dark

" Indent Guides
let g:indent_guides_enable_on_vim_startup = 1
hi IndentGuidesOdd  ctermbg=black
hi IndentGuidesEven ctermbg=darkgrey

" Set indent/tab = 4 spaces
set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab
